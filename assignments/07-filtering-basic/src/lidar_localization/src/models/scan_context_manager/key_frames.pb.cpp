// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: key_frames.proto

#include "lidar_localization/models/scan_context_manager/key_frames.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_key_5fframes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_key_5fframes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Quat;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_key_5fframes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Trans;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_key_5fframes_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_KeyFrame;
}  // namespace protobuf_key_5fframes_2eproto
namespace scan_context_io {
class TransDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Trans>
      _instance;
} _Trans_default_instance_;
class QuatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Quat>
      _instance;
} _Quat_default_instance_;
class KeyFrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyFrame>
      _instance;
} _KeyFrame_default_instance_;
class KeyFramesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyFrames>
      _instance;
} _KeyFrames_default_instance_;
}  // namespace scan_context_io
namespace protobuf_key_5fframes_2eproto {
static void InitDefaultsTrans() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::scan_context_io::_Trans_default_instance_;
    new (ptr) ::scan_context_io::Trans();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::scan_context_io::Trans::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Trans =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTrans}, {}};

static void InitDefaultsQuat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::scan_context_io::_Quat_default_instance_;
    new (ptr) ::scan_context_io::Quat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::scan_context_io::Quat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Quat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQuat}, {}};

static void InitDefaultsKeyFrame() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::scan_context_io::_KeyFrame_default_instance_;
    new (ptr) ::scan_context_io::KeyFrame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::scan_context_io::KeyFrame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_KeyFrame =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsKeyFrame}, {
      &protobuf_key_5fframes_2eproto::scc_info_Quat.base,
      &protobuf_key_5fframes_2eproto::scc_info_Trans.base,}};

static void InitDefaultsKeyFrames() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::scan_context_io::_KeyFrames_default_instance_;
    new (ptr) ::scan_context_io::KeyFrames();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::scan_context_io::KeyFrames::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_KeyFrames =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsKeyFrames}, {
      &protobuf_key_5fframes_2eproto::scc_info_KeyFrame.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Trans.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Quat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyFrame.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyFrames.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scan_context_io::Trans, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scan_context_io::Trans, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scan_context_io::Trans, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scan_context_io::Trans, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scan_context_io::Trans, z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scan_context_io::Quat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scan_context_io::Quat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scan_context_io::Quat, w_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scan_context_io::Quat, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scan_context_io::Quat, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scan_context_io::Quat, z_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scan_context_io::KeyFrame, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scan_context_io::KeyFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scan_context_io::KeyFrame, q_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scan_context_io::KeyFrame, t_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scan_context_io::KeyFrames, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scan_context_io::KeyFrames, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::scan_context_io::KeyFrames, data_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::scan_context_io::Trans)},
  { 11, 20, sizeof(::scan_context_io::Quat)},
  { 24, 31, sizeof(::scan_context_io::KeyFrame)},
  { 33, 39, sizeof(::scan_context_io::KeyFrames)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::scan_context_io::_Trans_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::scan_context_io::_Quat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::scan_context_io::_KeyFrame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::scan_context_io::_KeyFrames_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "key_frames.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020key_frames.proto\022\017scan_context_io\"(\n\005T"
      "rans\022\t\n\001x\030\001 \002(\002\022\t\n\001y\030\002 \002(\002\022\t\n\001z\030\003 \002(\002\"2\n"
      "\004Quat\022\t\n\001w\030\001 \002(\002\022\t\n\001x\030\002 \002(\002\022\t\n\001y\030\003 \002(\002\022\t"
      "\n\001z\030\004 \002(\002\"O\n\010KeyFrame\022 \n\001q\030\001 \002(\0132\025.scan_"
      "context_io.Quat\022!\n\001t\030\002 \002(\0132\026.scan_contex"
      "t_io.Trans\"4\n\tKeyFrames\022\'\n\004data\030\001 \003(\0132\031."
      "scan_context_io.KeyFrame"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 264);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "key_frames.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_key_5fframes_2eproto
namespace scan_context_io {

// ===================================================================

void Trans::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Trans::kXFieldNumber;
const int Trans::kYFieldNumber;
const int Trans::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Trans::Trans()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_key_5fframes_2eproto::scc_info_Trans.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:scan_context_io.Trans)
}
Trans::Trans(const Trans& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:scan_context_io.Trans)
}

void Trans::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

Trans::~Trans() {
  // @@protoc_insertion_point(destructor:scan_context_io.Trans)
  SharedDtor();
}

void Trans::SharedDtor() {
}

void Trans::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Trans::descriptor() {
  ::protobuf_key_5fframes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_key_5fframes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Trans& Trans::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_key_5fframes_2eproto::scc_info_Trans.base);
  return *internal_default_instance();
}


void Trans::Clear() {
// @@protoc_insertion_point(message_clear_start:scan_context_io.Trans)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&z_) -
        reinterpret_cast<char*>(&x_)) + sizeof(z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Trans::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:scan_context_io.Trans)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:scan_context_io.Trans)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:scan_context_io.Trans)
  return false;
#undef DO_
}

void Trans::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:scan_context_io.Trans)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // required float y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // required float z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:scan_context_io.Trans)
}

::google::protobuf::uint8* Trans::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:scan_context_io.Trans)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // required float y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // required float z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:scan_context_io.Trans)
  return target;
}

size_t Trans::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:scan_context_io.Trans)
  size_t total_size = 0;

  if (has_x()) {
    // required float x = 1;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 2;
    total_size += 1 + 4;
  }

  if (has_z()) {
    // required float z = 3;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t Trans::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:scan_context_io.Trans)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required float x = 1;
    total_size += 1 + 4;

    // required float y = 2;
    total_size += 1 + 4;

    // required float z = 3;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Trans::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:scan_context_io.Trans)
  GOOGLE_DCHECK_NE(&from, this);
  const Trans* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Trans>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:scan_context_io.Trans)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:scan_context_io.Trans)
    MergeFrom(*source);
  }
}

void Trans::MergeFrom(const Trans& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:scan_context_io.Trans)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Trans::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:scan_context_io.Trans)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Trans::CopyFrom(const Trans& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:scan_context_io.Trans)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Trans::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Trans::Swap(Trans* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Trans::InternalSwap(Trans* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Trans::GetMetadata() const {
  protobuf_key_5fframes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_key_5fframes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Quat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Quat::kWFieldNumber;
const int Quat::kXFieldNumber;
const int Quat::kYFieldNumber;
const int Quat::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Quat::Quat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_key_5fframes_2eproto::scc_info_Quat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:scan_context_io.Quat)
}
Quat::Quat(const Quat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&w_, &from.w_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&w_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:scan_context_io.Quat)
}

void Quat::SharedCtor() {
  ::memset(&w_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&w_)) + sizeof(z_));
}

Quat::~Quat() {
  // @@protoc_insertion_point(destructor:scan_context_io.Quat)
  SharedDtor();
}

void Quat::SharedDtor() {
}

void Quat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Quat::descriptor() {
  ::protobuf_key_5fframes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_key_5fframes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Quat& Quat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_key_5fframes_2eproto::scc_info_Quat.base);
  return *internal_default_instance();
}


void Quat::Clear() {
// @@protoc_insertion_point(message_clear_start:scan_context_io.Quat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&w_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&z_) -
        reinterpret_cast<char*>(&w_)) + sizeof(z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Quat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:scan_context_io.Quat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float w = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          set_has_w();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float z = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:scan_context_io.Quat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:scan_context_io.Quat)
  return false;
#undef DO_
}

void Quat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:scan_context_io.Quat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float w = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->w(), output);
  }

  // required float x = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // required float y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // required float z = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:scan_context_io.Quat)
}

::google::protobuf::uint8* Quat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:scan_context_io.Quat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float w = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->w(), target);
  }

  // required float x = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // required float y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // required float z = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:scan_context_io.Quat)
  return target;
}

size_t Quat::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:scan_context_io.Quat)
  size_t total_size = 0;

  if (has_w()) {
    // required float w = 1;
    total_size += 1 + 4;
  }

  if (has_x()) {
    // required float x = 2;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 3;
    total_size += 1 + 4;
  }

  if (has_z()) {
    // required float z = 4;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t Quat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:scan_context_io.Quat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required float w = 1;
    total_size += 1 + 4;

    // required float x = 2;
    total_size += 1 + 4;

    // required float y = 3;
    total_size += 1 + 4;

    // required float z = 4;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Quat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:scan_context_io.Quat)
  GOOGLE_DCHECK_NE(&from, this);
  const Quat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Quat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:scan_context_io.Quat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:scan_context_io.Quat)
    MergeFrom(*source);
  }
}

void Quat::MergeFrom(const Quat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:scan_context_io.Quat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      w_ = from.w_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000008u) {
      z_ = from.z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Quat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:scan_context_io.Quat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Quat::CopyFrom(const Quat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:scan_context_io.Quat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Quat::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void Quat::Swap(Quat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Quat::InternalSwap(Quat* other) {
  using std::swap;
  swap(w_, other->w_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Quat::GetMetadata() const {
  protobuf_key_5fframes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_key_5fframes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyFrame::InitAsDefaultInstance() {
  ::scan_context_io::_KeyFrame_default_instance_._instance.get_mutable()->q_ = const_cast< ::scan_context_io::Quat*>(
      ::scan_context_io::Quat::internal_default_instance());
  ::scan_context_io::_KeyFrame_default_instance_._instance.get_mutable()->t_ = const_cast< ::scan_context_io::Trans*>(
      ::scan_context_io::Trans::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyFrame::kQFieldNumber;
const int KeyFrame::kTFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyFrame::KeyFrame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_key_5fframes_2eproto::scc_info_KeyFrame.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:scan_context_io.KeyFrame)
}
KeyFrame::KeyFrame(const KeyFrame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_q()) {
    q_ = new ::scan_context_io::Quat(*from.q_);
  } else {
    q_ = NULL;
  }
  if (from.has_t()) {
    t_ = new ::scan_context_io::Trans(*from.t_);
  } else {
    t_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:scan_context_io.KeyFrame)
}

void KeyFrame::SharedCtor() {
  ::memset(&q_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&t_) -
      reinterpret_cast<char*>(&q_)) + sizeof(t_));
}

KeyFrame::~KeyFrame() {
  // @@protoc_insertion_point(destructor:scan_context_io.KeyFrame)
  SharedDtor();
}

void KeyFrame::SharedDtor() {
  if (this != internal_default_instance()) delete q_;
  if (this != internal_default_instance()) delete t_;
}

void KeyFrame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyFrame::descriptor() {
  ::protobuf_key_5fframes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_key_5fframes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyFrame& KeyFrame::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_key_5fframes_2eproto::scc_info_KeyFrame.base);
  return *internal_default_instance();
}


void KeyFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:scan_context_io.KeyFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(q_ != NULL);
      q_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(t_ != NULL);
      t_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool KeyFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:scan_context_io.KeyFrame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .scan_context_io.Quat q = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_q()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .scan_context_io.Trans t = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_t()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:scan_context_io.KeyFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:scan_context_io.KeyFrame)
  return false;
#undef DO_
}

void KeyFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:scan_context_io.KeyFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .scan_context_io.Quat q = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_q(), output);
  }

  // required .scan_context_io.Trans t = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_t(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:scan_context_io.KeyFrame)
}

::google::protobuf::uint8* KeyFrame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:scan_context_io.KeyFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .scan_context_io.Quat q = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_q(), deterministic, target);
  }

  // required .scan_context_io.Trans t = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_t(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:scan_context_io.KeyFrame)
  return target;
}

size_t KeyFrame::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:scan_context_io.KeyFrame)
  size_t total_size = 0;

  if (has_q()) {
    // required .scan_context_io.Quat q = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *q_);
  }

  if (has_t()) {
    // required .scan_context_io.Trans t = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *t_);
  }

  return total_size;
}
size_t KeyFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:scan_context_io.KeyFrame)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .scan_context_io.Quat q = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *q_);

    // required .scan_context_io.Trans t = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *t_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyFrame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:scan_context_io.KeyFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyFrame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyFrame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:scan_context_io.KeyFrame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:scan_context_io.KeyFrame)
    MergeFrom(*source);
  }
}

void KeyFrame::MergeFrom(const KeyFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:scan_context_io.KeyFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_q()->::scan_context_io::Quat::MergeFrom(from.q());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_t()->::scan_context_io::Trans::MergeFrom(from.t());
    }
  }
}

void KeyFrame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:scan_context_io.KeyFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyFrame::CopyFrom(const KeyFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:scan_context_io.KeyFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyFrame::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_q()) {
    if (!this->q_->IsInitialized()) return false;
  }
  if (has_t()) {
    if (!this->t_->IsInitialized()) return false;
  }
  return true;
}

void KeyFrame::Swap(KeyFrame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyFrame::InternalSwap(KeyFrame* other) {
  using std::swap;
  swap(q_, other->q_);
  swap(t_, other->t_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyFrame::GetMetadata() const {
  protobuf_key_5fframes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_key_5fframes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyFrames::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyFrames::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyFrames::KeyFrames()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_key_5fframes_2eproto::scc_info_KeyFrames.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:scan_context_io.KeyFrames)
}
KeyFrames::KeyFrames(const KeyFrames& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:scan_context_io.KeyFrames)
}

void KeyFrames::SharedCtor() {
}

KeyFrames::~KeyFrames() {
  // @@protoc_insertion_point(destructor:scan_context_io.KeyFrames)
  SharedDtor();
}

void KeyFrames::SharedDtor() {
}

void KeyFrames::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyFrames::descriptor() {
  ::protobuf_key_5fframes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_key_5fframes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyFrames& KeyFrames::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_key_5fframes_2eproto::scc_info_KeyFrames.base);
  return *internal_default_instance();
}


void KeyFrames::Clear() {
// @@protoc_insertion_point(message_clear_start:scan_context_io.KeyFrames)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool KeyFrames::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:scan_context_io.KeyFrames)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .scan_context_io.KeyFrame data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:scan_context_io.KeyFrames)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:scan_context_io.KeyFrames)
  return false;
#undef DO_
}

void KeyFrames::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:scan_context_io.KeyFrames)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .scan_context_io.KeyFrame data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->data(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:scan_context_io.KeyFrames)
}

::google::protobuf::uint8* KeyFrames::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:scan_context_io.KeyFrames)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .scan_context_io.KeyFrame data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->data(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:scan_context_io.KeyFrames)
  return target;
}

size_t KeyFrames::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:scan_context_io.KeyFrames)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .scan_context_io.KeyFrame data = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyFrames::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:scan_context_io.KeyFrames)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyFrames* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyFrames>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:scan_context_io.KeyFrames)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:scan_context_io.KeyFrames)
    MergeFrom(*source);
  }
}

void KeyFrames::MergeFrom(const KeyFrames& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:scan_context_io.KeyFrames)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void KeyFrames::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:scan_context_io.KeyFrames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyFrames::CopyFrom(const KeyFrames& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:scan_context_io.KeyFrames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyFrames::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void KeyFrames::Swap(KeyFrames* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyFrames::InternalSwap(KeyFrames* other) {
  using std::swap;
  CastToBase(&data_)->InternalSwap(CastToBase(&other->data_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyFrames::GetMetadata() const {
  protobuf_key_5fframes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_key_5fframes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace scan_context_io
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::scan_context_io::Trans* Arena::CreateMaybeMessage< ::scan_context_io::Trans >(Arena* arena) {
  return Arena::CreateInternal< ::scan_context_io::Trans >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::scan_context_io::Quat* Arena::CreateMaybeMessage< ::scan_context_io::Quat >(Arena* arena) {
  return Arena::CreateInternal< ::scan_context_io::Quat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::scan_context_io::KeyFrame* Arena::CreateMaybeMessage< ::scan_context_io::KeyFrame >(Arena* arena) {
  return Arena::CreateInternal< ::scan_context_io::KeyFrame >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::scan_context_io::KeyFrames* Arena::CreateMaybeMessage< ::scan_context_io::KeyFrames >(Arena* arena) {
  return Arena::CreateInternal< ::scan_context_io::KeyFrames >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
