// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: key_frames.proto

#ifndef PROTOBUF_INCLUDED_key_5fframes_2eproto
#define PROTOBUF_INCLUDED_key_5fframes_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_key_5fframes_2eproto 

namespace protobuf_key_5fframes_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_key_5fframes_2eproto
namespace scan_context_io {
class KeyFrame;
class KeyFrameDefaultTypeInternal;
extern KeyFrameDefaultTypeInternal _KeyFrame_default_instance_;
class KeyFrames;
class KeyFramesDefaultTypeInternal;
extern KeyFramesDefaultTypeInternal _KeyFrames_default_instance_;
class Quat;
class QuatDefaultTypeInternal;
extern QuatDefaultTypeInternal _Quat_default_instance_;
class Trans;
class TransDefaultTypeInternal;
extern TransDefaultTypeInternal _Trans_default_instance_;
}  // namespace scan_context_io
namespace google {
namespace protobuf {
template<> ::scan_context_io::KeyFrame* Arena::CreateMaybeMessage<::scan_context_io::KeyFrame>(Arena*);
template<> ::scan_context_io::KeyFrames* Arena::CreateMaybeMessage<::scan_context_io::KeyFrames>(Arena*);
template<> ::scan_context_io::Quat* Arena::CreateMaybeMessage<::scan_context_io::Quat>(Arena*);
template<> ::scan_context_io::Trans* Arena::CreateMaybeMessage<::scan_context_io::Trans>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace scan_context_io {

// ===================================================================

class Trans : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scan_context_io.Trans) */ {
 public:
  Trans();
  virtual ~Trans();

  Trans(const Trans& from);

  inline Trans& operator=(const Trans& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Trans(Trans&& from) noexcept
    : Trans() {
    *this = ::std::move(from);
  }

  inline Trans& operator=(Trans&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Trans& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Trans* internal_default_instance() {
    return reinterpret_cast<const Trans*>(
               &_Trans_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Trans* other);
  friend void swap(Trans& a, Trans& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Trans* New() const final {
    return CreateMaybeMessage<Trans>(NULL);
  }

  Trans* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Trans>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Trans& from);
  void MergeFrom(const Trans& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Trans* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // required float y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // required float z = 3;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:scan_context_io.Trans)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_z();
  void clear_has_z();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float x_;
  float y_;
  float z_;
  friend struct ::protobuf_key_5fframes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Quat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scan_context_io.Quat) */ {
 public:
  Quat();
  virtual ~Quat();

  Quat(const Quat& from);

  inline Quat& operator=(const Quat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Quat(Quat&& from) noexcept
    : Quat() {
    *this = ::std::move(from);
  }

  inline Quat& operator=(Quat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Quat* internal_default_instance() {
    return reinterpret_cast<const Quat*>(
               &_Quat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Quat* other);
  friend void swap(Quat& a, Quat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Quat* New() const final {
    return CreateMaybeMessage<Quat>(NULL);
  }

  Quat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Quat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Quat& from);
  void MergeFrom(const Quat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Quat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float w = 1;
  bool has_w() const;
  void clear_w();
  static const int kWFieldNumber = 1;
  float w() const;
  void set_w(float value);

  // required float x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // required float y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // required float z = 4;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 4;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:scan_context_io.Quat)
 private:
  void set_has_w();
  void clear_has_w();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_z();
  void clear_has_z();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  float w_;
  float x_;
  float y_;
  float z_;
  friend struct ::protobuf_key_5fframes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KeyFrame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scan_context_io.KeyFrame) */ {
 public:
  KeyFrame();
  virtual ~KeyFrame();

  KeyFrame(const KeyFrame& from);

  inline KeyFrame& operator=(const KeyFrame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KeyFrame(KeyFrame&& from) noexcept
    : KeyFrame() {
    *this = ::std::move(from);
  }

  inline KeyFrame& operator=(KeyFrame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyFrame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KeyFrame* internal_default_instance() {
    return reinterpret_cast<const KeyFrame*>(
               &_KeyFrame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(KeyFrame* other);
  friend void swap(KeyFrame& a, KeyFrame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KeyFrame* New() const final {
    return CreateMaybeMessage<KeyFrame>(NULL);
  }

  KeyFrame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<KeyFrame>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const KeyFrame& from);
  void MergeFrom(const KeyFrame& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KeyFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .scan_context_io.Quat q = 1;
  bool has_q() const;
  void clear_q();
  static const int kQFieldNumber = 1;
  private:
  const ::scan_context_io::Quat& _internal_q() const;
  public:
  const ::scan_context_io::Quat& q() const;
  ::scan_context_io::Quat* release_q();
  ::scan_context_io::Quat* mutable_q();
  void set_allocated_q(::scan_context_io::Quat* q);

  // required .scan_context_io.Trans t = 2;
  bool has_t() const;
  void clear_t();
  static const int kTFieldNumber = 2;
  private:
  const ::scan_context_io::Trans& _internal_t() const;
  public:
  const ::scan_context_io::Trans& t() const;
  ::scan_context_io::Trans* release_t();
  ::scan_context_io::Trans* mutable_t();
  void set_allocated_t(::scan_context_io::Trans* t);

  // @@protoc_insertion_point(class_scope:scan_context_io.KeyFrame)
 private:
  void set_has_q();
  void clear_has_q();
  void set_has_t();
  void clear_has_t();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::scan_context_io::Quat* q_;
  ::scan_context_io::Trans* t_;
  friend struct ::protobuf_key_5fframes_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KeyFrames : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scan_context_io.KeyFrames) */ {
 public:
  KeyFrames();
  virtual ~KeyFrames();

  KeyFrames(const KeyFrames& from);

  inline KeyFrames& operator=(const KeyFrames& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KeyFrames(KeyFrames&& from) noexcept
    : KeyFrames() {
    *this = ::std::move(from);
  }

  inline KeyFrames& operator=(KeyFrames&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyFrames& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KeyFrames* internal_default_instance() {
    return reinterpret_cast<const KeyFrames*>(
               &_KeyFrames_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(KeyFrames* other);
  friend void swap(KeyFrames& a, KeyFrames& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KeyFrames* New() const final {
    return CreateMaybeMessage<KeyFrames>(NULL);
  }

  KeyFrames* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<KeyFrames>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const KeyFrames& from);
  void MergeFrom(const KeyFrames& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KeyFrames* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .scan_context_io.KeyFrame data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::scan_context_io::KeyFrame* mutable_data(int index);
  ::google::protobuf::RepeatedPtrField< ::scan_context_io::KeyFrame >*
      mutable_data();
  const ::scan_context_io::KeyFrame& data(int index) const;
  ::scan_context_io::KeyFrame* add_data();
  const ::google::protobuf::RepeatedPtrField< ::scan_context_io::KeyFrame >&
      data() const;

  // @@protoc_insertion_point(class_scope:scan_context_io.KeyFrames)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::scan_context_io::KeyFrame > data_;
  friend struct ::protobuf_key_5fframes_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Trans

// required float x = 1;
inline bool Trans::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Trans::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Trans::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Trans::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Trans::x() const {
  // @@protoc_insertion_point(field_get:scan_context_io.Trans.x)
  return x_;
}
inline void Trans::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:scan_context_io.Trans.x)
}

// required float y = 2;
inline bool Trans::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Trans::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Trans::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Trans::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Trans::y() const {
  // @@protoc_insertion_point(field_get:scan_context_io.Trans.y)
  return y_;
}
inline void Trans::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:scan_context_io.Trans.y)
}

// required float z = 3;
inline bool Trans::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Trans::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Trans::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Trans::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float Trans::z() const {
  // @@protoc_insertion_point(field_get:scan_context_io.Trans.z)
  return z_;
}
inline void Trans::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:scan_context_io.Trans.z)
}

// -------------------------------------------------------------------

// Quat

// required float w = 1;
inline bool Quat::has_w() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Quat::set_has_w() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Quat::clear_has_w() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Quat::clear_w() {
  w_ = 0;
  clear_has_w();
}
inline float Quat::w() const {
  // @@protoc_insertion_point(field_get:scan_context_io.Quat.w)
  return w_;
}
inline void Quat::set_w(float value) {
  set_has_w();
  w_ = value;
  // @@protoc_insertion_point(field_set:scan_context_io.Quat.w)
}

// required float x = 2;
inline bool Quat::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Quat::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Quat::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Quat::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Quat::x() const {
  // @@protoc_insertion_point(field_get:scan_context_io.Quat.x)
  return x_;
}
inline void Quat::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:scan_context_io.Quat.x)
}

// required float y = 3;
inline bool Quat::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Quat::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Quat::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Quat::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Quat::y() const {
  // @@protoc_insertion_point(field_get:scan_context_io.Quat.y)
  return y_;
}
inline void Quat::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:scan_context_io.Quat.y)
}

// required float z = 4;
inline bool Quat::has_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Quat::set_has_z() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Quat::clear_has_z() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Quat::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float Quat::z() const {
  // @@protoc_insertion_point(field_get:scan_context_io.Quat.z)
  return z_;
}
inline void Quat::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:scan_context_io.Quat.z)
}

// -------------------------------------------------------------------

// KeyFrame

// required .scan_context_io.Quat q = 1;
inline bool KeyFrame::has_q() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeyFrame::set_has_q() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KeyFrame::clear_has_q() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KeyFrame::clear_q() {
  if (q_ != NULL) q_->Clear();
  clear_has_q();
}
inline const ::scan_context_io::Quat& KeyFrame::_internal_q() const {
  return *q_;
}
inline const ::scan_context_io::Quat& KeyFrame::q() const {
  const ::scan_context_io::Quat* p = q_;
  // @@protoc_insertion_point(field_get:scan_context_io.KeyFrame.q)
  return p != NULL ? *p : *reinterpret_cast<const ::scan_context_io::Quat*>(
      &::scan_context_io::_Quat_default_instance_);
}
inline ::scan_context_io::Quat* KeyFrame::release_q() {
  // @@protoc_insertion_point(field_release:scan_context_io.KeyFrame.q)
  clear_has_q();
  ::scan_context_io::Quat* temp = q_;
  q_ = NULL;
  return temp;
}
inline ::scan_context_io::Quat* KeyFrame::mutable_q() {
  set_has_q();
  if (q_ == NULL) {
    auto* p = CreateMaybeMessage<::scan_context_io::Quat>(GetArenaNoVirtual());
    q_ = p;
  }
  // @@protoc_insertion_point(field_mutable:scan_context_io.KeyFrame.q)
  return q_;
}
inline void KeyFrame::set_allocated_q(::scan_context_io::Quat* q) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete q_;
  }
  if (q) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      q = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, q, submessage_arena);
    }
    set_has_q();
  } else {
    clear_has_q();
  }
  q_ = q;
  // @@protoc_insertion_point(field_set_allocated:scan_context_io.KeyFrame.q)
}

// required .scan_context_io.Trans t = 2;
inline bool KeyFrame::has_t() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KeyFrame::set_has_t() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KeyFrame::clear_has_t() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KeyFrame::clear_t() {
  if (t_ != NULL) t_->Clear();
  clear_has_t();
}
inline const ::scan_context_io::Trans& KeyFrame::_internal_t() const {
  return *t_;
}
inline const ::scan_context_io::Trans& KeyFrame::t() const {
  const ::scan_context_io::Trans* p = t_;
  // @@protoc_insertion_point(field_get:scan_context_io.KeyFrame.t)
  return p != NULL ? *p : *reinterpret_cast<const ::scan_context_io::Trans*>(
      &::scan_context_io::_Trans_default_instance_);
}
inline ::scan_context_io::Trans* KeyFrame::release_t() {
  // @@protoc_insertion_point(field_release:scan_context_io.KeyFrame.t)
  clear_has_t();
  ::scan_context_io::Trans* temp = t_;
  t_ = NULL;
  return temp;
}
inline ::scan_context_io::Trans* KeyFrame::mutable_t() {
  set_has_t();
  if (t_ == NULL) {
    auto* p = CreateMaybeMessage<::scan_context_io::Trans>(GetArenaNoVirtual());
    t_ = p;
  }
  // @@protoc_insertion_point(field_mutable:scan_context_io.KeyFrame.t)
  return t_;
}
inline void KeyFrame::set_allocated_t(::scan_context_io::Trans* t) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete t_;
  }
  if (t) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      t = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, t, submessage_arena);
    }
    set_has_t();
  } else {
    clear_has_t();
  }
  t_ = t;
  // @@protoc_insertion_point(field_set_allocated:scan_context_io.KeyFrame.t)
}

// -------------------------------------------------------------------

// KeyFrames

// repeated .scan_context_io.KeyFrame data = 1;
inline int KeyFrames::data_size() const {
  return data_.size();
}
inline void KeyFrames::clear_data() {
  data_.Clear();
}
inline ::scan_context_io::KeyFrame* KeyFrames::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:scan_context_io.KeyFrames.data)
  return data_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::scan_context_io::KeyFrame >*
KeyFrames::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:scan_context_io.KeyFrames.data)
  return &data_;
}
inline const ::scan_context_io::KeyFrame& KeyFrames::data(int index) const {
  // @@protoc_insertion_point(field_get:scan_context_io.KeyFrames.data)
  return data_.Get(index);
}
inline ::scan_context_io::KeyFrame* KeyFrames::add_data() {
  // @@protoc_insertion_point(field_add:scan_context_io.KeyFrames.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::scan_context_io::KeyFrame >&
KeyFrames::data() const {
  // @@protoc_insertion_point(field_list:scan_context_io.KeyFrames.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace scan_context_io

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_key_5fframes_2eproto
